(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"+WgK":function(e,t,r){"use strict";r.r(t),r.d(t,"history",(function(){return a}));var n=r("LhCv");const a=Object(n.a)()},"1HUD":function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PlaceholderBandModButtonGroup=t.BandModButtonGroup=void 0;var o=s(r("q1tI")),u=s(r("QKck")),i=s(r("hlKo")),l=r("X13+"),c=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={modValue:t.props.modPerformed},t}return a(t,e),t.prototype.componentDidUpdate=function(e,t){this.state.modValue!=t.modValue&&(0==this.state.modValue?this.props.modifyBand&&this.props.modifyBand(0,t.modValue):this.props.modifyBand&&this.props.modifyBand(this.state.modValue))},t.prototype.render=function(){var e=this,t=this.props,r=t.userIsAuthorized,n=t.modPerformed;return o.default.createElement(u.default,{name:"modButtons",value:this.state.modValue,onChange:function(t){return e.setState({modValue:e.state.modValue+t})}},o.default.createElement(i.default,{name:"negativeButton",value:-1,disabled:!r,checked:-1==n},-1==this.state.modValue?o.default.createElement(l.BsCaretDownFill,null):o.default.createElement(l.BsCaretDown,null)),o.default.createElement(i.default,{name:"positiveButton",value:1,disabled:!r,checked:1==n},1==this.state.modValue?o.default.createElement(l.BsCaretUpFill,null):o.default.createElement(l.BsCaretUp,null)))},t}(o.default.Component);t.BandModButtonGroup=c,t.PlaceholderBandModButtonGroup=function(){return o.default.createElement(u.default,{name:"placeHolderModButtons"},o.default.createElement(i.default,{disabled:!0,value:1},o.default.createElement(l.BsCaretDown,null)),o.default.createElement(i.default,{disabled:!0,value:2},o.default.createElement(l.BsCaretUp,null)))}},"4tJo":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.userProfileActions=void 0;var n=r("i7Pf"),a=r("7Fo/"),s={fetchStatus:a.ProfileFetchStatuses.NOT_TRYING,profile:void 0},o=n.createSlice({name:"userProfile",initialState:s,reducers:{requestFetchUserProfile:function(e,t){e.fetchStatus=a.ProfileFetchStatuses.ATTEMPTING},fetchUserProfileSuccess:function(e,t){e.fetchStatus=a.ProfileFetchStatuses.SUCCESS,e.profile=t.payload.profile},fetchUserProfileFailure:function(e){e.fetchStatus=a.ProfileFetchStatuses.FAILURE,e.profile=void 0}}});t.userProfileActions=o.actions,t.default=o.reducer},"6pyq":function(e,t,r){"use strict";var n=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var s=arguments[t],o=0,u=s.length;o<u;o++,a++)n[a]=s[o];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.sortAndLimitUserRecords=void 0;var a=r("7Fo/");t.sortAndLimitUserRecords=function(e,t,r){var s=n(e);switch(t){case a.UserRecordSortTypes.HIGHEST_AVERAGE_SCORE:s.sort((function(e,t){return t.averageScore-e.averageScore}));break;case a.UserRecordSortTypes.HIGHEST_SCORE:s.sort((function(e,t){return t.totalScore-e.totalScore}));break;case a.UserRecordSortTypes.MOST_NAMES_CONTRIBUTED:s.sort((function(e,t){return t.namesContributed-e.namesContributed}))}return s=s.slice(0,r)}},"7Fo/":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserCreationStatuses=t.AuthenticationStatuses=t.ProfileFetchStatuses=t.BandScoreModificationStatuses=t.BandSortTypes=t.BandCreationStatuses=t.UserRecordSortTypes=void 0,function(e){e[e.HIGHEST_SCORE=0]="HIGHEST_SCORE",e[e.HIGHEST_AVERAGE_SCORE=1]="HIGHEST_AVERAGE_SCORE",e[e.MOST_NAMES_CONTRIBUTED=2]="MOST_NAMES_CONTRIBUTED"}(t.UserRecordSortTypes||(t.UserRecordSortTypes={})),function(e){e[e.CREATING=0]="CREATING",e[e.CREATED=1]="CREATED",e[e.ERROR=2]="ERROR",e[e.BAND_EXISTS=3]="BAND_EXISTS",e[e.NOT_TRYING=4]="NOT_TRYING"}(t.BandCreationStatuses||(t.BandCreationStatuses={})),function(e){e[e.BEST=0]="BEST",e[e.WORST=1]="WORST",e[e.MOST_RECENT=2]="MOST_RECENT"}(t.BandSortTypes||(t.BandSortTypes={})),function(e){e[e.ATTEMPTING=0]="ATTEMPTING",e[e.SUCCESS=1]="SUCCESS",e[e.FAILURE=2]="FAILURE",e[e.NOT_TRYING=3]="NOT_TRYING"}(t.BandScoreModificationStatuses||(t.BandScoreModificationStatuses={})),function(e){e[e.ATTEMPTING=0]="ATTEMPTING",e[e.SUCCESS=1]="SUCCESS",e[e.FAILURE=2]="FAILURE",e[e.NOT_TRYING=3]="NOT_TRYING"}(t.ProfileFetchStatuses||(t.ProfileFetchStatuses={})),function(e){e[e.AUTHENTICATING=0]="AUTHENTICATING",e[e.AUTHENTICATED=1]="AUTHENTICATED",e[e.NOT_AUTHENTICATED=2]="NOT_AUTHENTICATED",e[e.NOT_TRYING=3]="NOT_TRYING",e[e.SERVER_ERROR=4]="SERVER_ERROR",e[e.USERNAME_NOT_FOUND=5]="USERNAME_NOT_FOUND",e[e.INVALID_PASSWORD=6]="INVALID_PASSWORD",e[e.LOGGING_OUT=7]="LOGGING_OUT"}(t.AuthenticationStatuses||(t.AuthenticationStatuses={})),function(e){e[e.PROCESSING=0]="PROCESSING",e[e.PASSWORDS_DONT_MATCH=1]="PASSWORDS_DONT_MATCH",e[e.USERNAME_TAKEN=2]="USERNAME_TAKEN",e[e.NOT_TRYING=3]="NOT_TRYING",e[e.SERVER_ERROR=4]="SERVER_ERROR",e[e.SUCCESS=5]="SUCCESS",e[e.EMPTY_FIELDS=6]="EMPTY_FIELDS",e[e.INVALID_EMAIL=7]="INVALID_EMAIL",e[e.EMAIL_TAKEN=8]="EMAIL_TAKEN"}(t.UserCreationStatuses||(t.UserCreationStatuses={}))},"7Zh8":function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__generator||function(e,t){var r,n,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.bandCreationSaga=void 0;var i=r("5rFJ"),l=u(r("vDqi")),c=s(r("VYM/")),d=r("Xep1");t.bandCreationSaga=function(){var e,t,r,n,a,s,u,f,p;return o(this,(function(o){switch(o.label){case 0:return[4,i.take(d.bandActions.requestCreateBand.type)];case 1:e=o.sent().payload,t=e.creatingUserId,r=e.bandName,n=e.creatingUsername,a={bandName:r,ownerId:t,ownerName:n},o.label=2;case 2:return o.trys.push([2,6,,8]),[4,i.call(l.default.post,c.serverUrl+c.newBand,a)];case 3:return 200!=(s=o.sent()).status?[3,5]:(u=s.data.newBand,[4,i.put(d.bandActions.createBandSuccess(u))]);case 4:o.sent(),o.label=5;case 5:return[3,8];case 6:return f=o.sent(),p=f.response.data.reason,[4,i.put(d.bandActions.createBandFailure(p))];case 7:return o.sent(),[3,8];case 8:return[3,0];case 9:return[2]}}))}},"7hBq":function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Navigation=void 0;var o=s(r("q1tI")),u=s(r("+YzT")),i=s(r("6ctO")),l=r("/MKj"),c=r("7Fo/"),d=r("+Tvs"),f=r("fqsA"),p=function(e){var t=e.session;return{authenticationStatus:t.authenticationStatus,username:t.username}};function h(e){return{logout:function(){e(f.sessionActions.requestLogout())},checkSession:function(){e(f.sessionActions.requestCheckSession())}}}l.connect(p,h);var m=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.prototype.componentDidMount=function(){this.props.authenticationStatus==c.AuthenticationStatuses.NOT_TRYING&&this.props.checkSession()},t.prototype.render=function(){var e=this;return o.default.createElement(i.default,{bg:"light",className:"mb-3"},o.default.createElement(d.LinkContainer,{to:"/"},o.default.createElement(i.default.Brand,null,"wababc?")),this.props.authenticationStatus==c.AuthenticationStatuses.AUTHENTICATED?o.default.createElement(o.default.Fragment,null,o.default.createElement(u.default.Item,null,"Signed in as ",this.props.username),o.default.createElement(u.default.Link,{onClick:function(){return e.props.logout()}},"Logout")):o.default.createElement(o.default.Fragment,null,o.default.createElement(d.LinkContainer,{to:"/login"},o.default.createElement(u.default.Link,null,"Login")),o.default.createElement(d.LinkContainer,{to:"/new-user"},o.default.createElement(u.default.Link,null,"Create Account"))))},t}(o.default.Component);t.Navigation=l.connect(p,h)(m)},AEI1:function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CreateBandForm=void 0;var o=s(r("q1tI")),u=r("/MKj"),i=r("Xep1"),l=s(r("zUrK")),c=s(r("jDKy")),d=s(r("cWnB")),f=s(r("TUci")),p=r("7Fo/"),h=r("+Tvs"),m=r("7Fo/"),y=s(r("T/rR")),S=function(){return o.default.createElement(f.default,{variant:"warning"},o.default.createElement(f.default.Heading,null,"This MF said “     ”"),o.default.createElement("p",null,"Who are you, John Cage? 😭😭😭 Just kidding, don't know who that is."))};function _(){return o.default.createElement(f.default,{variant:"warning"},o.default.createElement(f.default.Heading,null,"Somebody already thought of that!"),o.default.createElement("p",null,"Going to have to try harder. Maybe read a very complicated book and then think of some reference to that."))}function b(){return o.default.createElement(f.default,{variant:"warning"},o.default.createElement(f.default.Heading,null,"You've gotta be signed in!"),o.default.createElement("p",null,"We don't let just anyone in here. You can"," ",o.default.createElement(h.LinkContainer,{to:"/new-user"},o.default.createElement(f.default.Link,null,"make an account here")),", though, if you want."))}var v=function(e){var t=e.name;return o.default.createElement(f.default,{variant:"success"},o.default.createElement(f.default.Heading,null,"“",t,"” submitted!"),o.default.createElement("p",null,"Now that's funny."))};function E(e){return{authenticationStatus:e.session.authenticationStatus,userId:e.session.userId,username:e.session.username,bandCreationStatus:e.bands.creationStatus}}function g(e){return{createBand:function(t,r,n){e(i.bandActions.requestCreateBand({creatingUserId:t,creatingUsername:r,bandName:n}))}}}u.connect(E,g);var T=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={bandName:"",displayBandExistsAlert:!1,displayUserNotLoggedIn:!1,displayNoNameAlert:!1,displayProgess:!1,displaySuccess:!1,displayErrorAlert:!1,lastSuccesfulName:""},t}return a(t,e),t.prototype.componentDidUpdate=function(e){if(this.props.bandCreationStatus!==e.bandCreationStatus)switch(this.props.bandCreationStatus){case m.BandCreationStatuses.CREATING:this.setState({displayBandExistsAlert:!1,displayUserNotLoggedIn:!1,displayNoNameAlert:!1,displayProgess:!0,displaySuccess:!1,displayErrorAlert:!1});break;case m.BandCreationStatuses.CREATED:this.setState({displayBandExistsAlert:!1,displayUserNotLoggedIn:!1,displayNoNameAlert:!1,displayProgess:!1,displaySuccess:!0,displayErrorAlert:!1,lastSuccesfulName:this.state.bandName,bandName:""});break;case m.BandCreationStatuses.BAND_EXISTS:this.setState({displayBandExistsAlert:!0,displayUserNotLoggedIn:!1,displayNoNameAlert:!1,displayProgess:!1,displaySuccess:!1,displayErrorAlert:!1,bandName:""});break;case m.BandCreationStatuses.ERROR:this.setState({displayBandExistsAlert:!1,displayUserNotLoggedIn:!1,displayNoNameAlert:!1,displayProgess:!1,displaySuccess:!1,displayErrorAlert:!0});break;default:return}},t.prototype.handleClick=function(){this.props.authenticationStatus==p.AuthenticationStatuses.AUTHENTICATED?""==this.state.bandName?this.setState({displayBandExistsAlert:!1,displayUserNotLoggedIn:!1,displayNoNameAlert:!0,displayProgess:!1,displaySuccess:!1}):this.props.createBand(this.props.userId,this.props.username,this.state.bandName):this.setState({displayBandExistsAlert:!1,displayUserNotLoggedIn:!0,displayNoNameAlert:!1,displayProgess:!1,displaySuccess:!1})},t.prototype.render=function(){var e=this,t=this.state,r=t.displayBandExistsAlert,n=t.displayNoNameAlert,a=t.displayProgess,s=t.displayUserNotLoggedIn,u=t.displaySuccess;return o.default.createElement("div",{className:"mb-3"},o.default.createElement(l.default,{size:"lg"},o.default.createElement(c.default,{type:"text",placeholder:"What about a band called...",onChange:function(t){return e.setState({bandName:t.target.value})},value:this.state.bandName}),o.default.createElement(l.default.Append,null,a?o.default.createElement(d.default,{variant:"primary",disabled:!0},o.default.createElement(y.default,{as:"span",animation:"border",size:"sm",role:"status","aria-hidden":"true"})):o.default.createElement(d.default,{variant:"primary",onClick:function(){return e.handleClick()}},"Submit"))),s?o.default.createElement(b,null):null,n?o.default.createElement(S,null):null,r?o.default.createElement(_,null):null,u?o.default.createElement(v,{name:this.state.lastSuccesfulName}):null)},t}(o.default.Component);t.CreateBandForm=u.connect(E,g)(T)},"EP/U":function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__generator||function(e,t){var r,n,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.logoutSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=s(r("VYM/")),d=r("fqsA");t.logoutSaga=function(){return o(this,(function(e){switch(e.label){case 0:return[4,l.take(d.sessionActions.requestLogout.type)];case 1:e.sent(),e.label=2;case 2:return e.trys.push([2,5,,7]),[4,l.call(i.default.delete,c.serverUrl+c.sessionEndpoint,{withCredentials:!0})];case 3:return e.sent(),[4,l.put(d.sessionActions.logoutSuccess())];case 4:return e.sent(),[3,7];case 5:return e.sent(),[4,l.put(d.sessionActions.logoutFailure())];case 6:return e.sent(),[3,7];case 7:return[3,0];case 8:return[2]}}))}},KiFf:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTimeSince=void 0;t.getTimeSince=function(e){var t=Date.now()-e.getTime();if(t<6e4)return"1m";if(t<36e5)return(r=Math.floor(t/6e4))+"m";if(t<864e5){var r,n=Math.floor(t/36e5)+"h";return(r=Math.floor(t%36e5/6e4))>0&&(n+=" "+r+"m"),n}if(t<31536e6)return Math.floor(t/864e5)+"d";var a=Math.floor(t/31536e6),s=Math.floor(t%31536e6/864e5),o=a+"y";return s>0&&(o+=" "+s+"d"),o}},NL3p:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__generator||function(e,t){var r,n,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fetchBands=t.watchFetchBandsSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=s(r("VYM/")),d=r("Xep1");function f(e,t){var r;return o(this,(function(n){switch(n.label){case 0:return n.trys.push([0,3,,5]),[4,l.call(i.default.post,c.serverUrl+c.postBands,{maxBands:e,sortBy:t})];case 1:if(200!=(r=n.sent()).status)throw new Error;return[4,l.put(d.bandActions.fetchBandsSuccess(r.data))];case 2:return n.sent(),[3,5];case 3:return n.sent(),[4,l.put(d.bandActions.fetchBandsFailure())];case 4:return n.sent(),[3,5];case 5:return[2]}}))}t.watchFetchBandsSaga=function(){var e,t,r,n;return o(this,(function(a){switch(a.label){case 0:return[4,l.actionChannel(d.bandActions.requestFetchBands.type)];case 1:e=a.sent(),a.label=2;case 2:return[4,l.take(e)];case 3:return t=a.sent().payload,r=t.maxBands,n=t.sortBy,[4,l.call(f,r,n)];case 4:return a.sent(),[3,2];case 5:return[2]}}))},t.fetchBands=f},O5yZ:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__generator||function(e,t){var r,n,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.userAuthenticationSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=s(r("VYM/")),d=r("fqsA");t.userAuthenticationSaga=function(){var e,t,r,n,a,s,u,f;return o(this,(function(o){switch(o.label){case 0:return[4,l.take(d.sessionActions.requestAuthenticateUser.type)];case 1:e=o.sent().payload,t=e.username,r=e.password,o.label=2;case 2:return o.trys.push([2,6,,10]),[4,l.call(i.default.post,c.serverUrl+c.authenticate,{username:t,password:r},{withCredentials:!0})];case 3:return n=o.sent(),a=n.data,s=a.userId,u=a.bandsModified,200!=n.status?[3,5]:[4,l.put(d.sessionActions.authenticateUserSuccess({userId:s,username:t,bandsModified:u}))];case 4:o.sent(),o.label=5;case 5:return[3,10];case 6:return(f=o.sent()).response?[4,l.put(d.sessionActions.authenticateUserFailure({reason:f.response.data.reason}))]:[3,8];case 7:return o.sent(),[3,9];case 8:console.error(f),o.label=9;case 9:return[3,10];case 10:return[3,0];case 11:return[2]}}))}},OEB8:function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.NewUserForm=t.UnconnectedNewUserForm=void 0;var o=s(r("q1tI")),u=s(r("cWnB")),i=s(r("7vrA")),l=s(r("6xyR")),c=s(r("TUci")),d=s(r("QojX")),f=r("/MKj"),p=r("7Fo/"),h=r("fqsA"),m=s(r("T/rR")),y=function(e){return{userCreationStatus:e.session.userCreationStatus}},S=function(e){return{submitForm:function(t,r,n){return e(h.sessionActions.requestCreateUser({username:t,password:r,repeatPassword:n}))}}},_=(f.connect(y,S),function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={email:"",username:"",password:"",repeatPassword:""},t}return a(t,e),t.prototype.render=function(){var e=this,t=this.props.userCreationStatus;return o.default.createElement(i.default,null,o.default.createElement(l.default,{style:{maxWidth:"36rem"},className:"mx-auto"},o.default.createElement(l.default.Body,null,o.default.createElement(d.default,null,o.default.createElement(d.default.Group,{controlId:"formNewUserName"},o.default.createElement(d.default.Label,null,"Username"),o.default.createElement(d.default.Control,{type:"text",onChange:function(t){return e.setState({username:t.target.value})},isInvalid:this.props.userCreationStatus==p.UserCreationStatuses.USERNAME_TAKEN}),o.default.createElement(d.default.Control.Feedback,{type:"invalid"},"Username is already taken.")),o.default.createElement(d.default.Group,{controlId:"formNewUserPassword"},o.default.createElement(d.default.Label,null,"Password"),o.default.createElement(d.default.Control,{type:"password",onChange:function(t){return e.setState({password:t.target.value})},isInvalid:this.props.userCreationStatus==p.UserCreationStatuses.PASSWORDS_DONT_MATCH})),o.default.createElement(d.default.Group,{controlId:"formNewUserRepeatPassword"},o.default.createElement(d.default.Label,null,"Repeat Password"),o.default.createElement(d.default.Control,{type:"password",onChange:function(t){return e.setState({repeatPassword:t.target.value})},isInvalid:this.props.userCreationStatus==p.UserCreationStatuses.PASSWORDS_DONT_MATCH}),o.default.createElement(d.default.Control.Feedback,{type:"invalid"},"Passwords don't match.")),o.default.createElement(u.default,{variant:"primary",type:"button",disabled:this.props.userCreationStatus==p.UserCreationStatuses.PROCESSING||this.props.userCreationStatus==p.UserCreationStatuses.SUCCESS,onClick:function(){return e.props.submitForm(e.state.username,e.state.password,e.state.repeatPassword)}},"Submit"),this.props.userCreationStatus==p.UserCreationStatuses.SUCCESS&&o.default.createElement(c.default,{variant:"success"},"Account created! You may now ",o.default.createElement("a",{href:"/login"},"log in"),"."),t==p.UserCreationStatuses.PROCESSING&&o.default.createElement(c.default,{variant:"info"},o.default.createElement(m.default,{animation:"border",variant:"primary"})," Processing...")))))},t}(o.default.Component));t.UnconnectedNewUserForm=_,t.NewUserForm=f.connect(y,S)(_)},PVq7:function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UserProfile=void 0;var o=s(r("q1tI")),u=r("/MKj"),i=r("4tJo"),l=s(r("7vrA")),c=s(r("3Z9Z")),d=s(r("JI6e")),f=s(r("6xyR")),p=s(r("MBJH")),h=s(r("65eO")),m=r("KiFf");var y=u.connect((function(e){return{fetchStatus:e.userProfile.fetchStatus,profile:e.userProfile.profile}}),(function(e){return{requestFetchProfile:function(t){e(i.userProfileActions.requestFetchUserProfile({targetId:t}))}}})),S=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.prototype.componentDidMount=function(){this.props.requestFetchProfile(this.props.id)},t.prototype.render=function(){var e=this.props.profile;return e?o.default.createElement(l.default,null,o.default.createElement(f.default,null,o.default.createElement(f.default.Header,null,o.default.createElement("h5",null,e.name)),o.default.createElement(f.default.Body,null,o.default.createElement(f.default,null,o.default.createElement(f.default.Body,null,o.default.createElement(c.default,null,o.default.createElement(d.default,{md:4},o.default.createElement("div",null,"Total score: ",o.default.createElement("b",null,e.totalScore)),o.default.createElement("div",null,"Average score: ",o.default.createElement("b",null,e.averageScore.toFixed(2))),o.default.createElement("div",null,"Names contributed: ",o.default.createElement("b",null,e.namesContributed))),o.default.createElement(d.default,{md:8},o.default.createElement(p.default,{size:"sm",striped:!0,bordered:!0},o.default.createElement("tbody",null,e.bands.map((function(e){return o.default.createElement("tr",{key:String(e._id)},o.default.createElement("td",null,o.default.createElement(h.default,{variant:"secondary"},e.score)," ",o.default.createElement("b",null,e.name)," (created ",m.getTimeSince(new Date(e.createdOn))," ago)"))}))))))))))):null},t}(o.default.Component);t.UserProfile=y(S)},U6Ra:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__generator||function(e,t){var r,n,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fetchUserRecords=t.watchFetchUserRecordsSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=s(r("VYM/")),d=r("tIUU");function f(e,t){var r;return o(this,(function(n){switch(n.label){case 0:return n.trys.push([0,3,,5]),[4,l.call(i.default.post,c.serverUrl+c.getUserRecords,{numOfRecords:e,sortType:t})];case 1:if(200!=(r=n.sent()).status)throw new Error;return[4,l.put(d.userRecordsActions.fetchUserRecordsSuccess(r.data))];case 2:return n.sent(),[3,5];case 3:return n.sent(),[4,l.put(d.userRecordsActions.fetchUserRecordsFailure())];case 4:return n.sent(),[3,5];case 5:return[2]}}))}t.watchFetchUserRecordsSaga=function(){var e,t,r,n;return o(this,(function(a){switch(a.label){case 0:return[4,l.actionChannel(d.userRecordsActions.requestFetchUserRecords.type)];case 1:e=a.sent(),a.label=2;case 2:return[4,l.take(e)];case 3:return t=a.sent().payload,r=t.numOfRecords,n=t.sortType,[4,l.call(f,r,n)];case 4:return a.sent(),[3,2];case 5:return[2]}}))},t.fetchUserRecords=f},UpH7:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__generator||function(e,t){var r,n,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.bandScoreModificationSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=s(r("VYM/")),d=r("Xep1");t.bandScoreModificationSaga=function(){var e,t,r,n;return o(this,(function(a){switch(a.label){case 0:return[4,l.take(d.bandActions.requestModifyBandScore.type)];case 1:e=a.sent().payload,t=e.targetBandId,r=e.modifyingUserId,n=e.modificationValue,a.label=2;case 2:return a.trys.push([2,8,,10]),[4,l.call(i.default.post,c.serverUrl+c.modifyBand,{targetBandId:t,modifyingUserId:r,modificationValue:n})];case 3:if(200!=a.sent().status)throw new Error;return 0!=n?[3,5]:[4,l.put(d.bandActions.modifyBandScoreSuccess({targetBandId:t,modificationValue:-e.undoValue}))];case 4:return a.sent(),[3,7];case 5:return[4,l.put(d.bandActions.modifyBandScoreSuccess({targetBandId:t,modificationValue:n}))];case 6:a.sent(),a.label=7;case 7:return[3,10];case 8:return a.sent(),[4,l.put(d.bandActions.modifyBandScoreFailure())];case 9:return a.sent(),[3,10];case 10:return[3,0];case 11:return[2]}}))}},"VYM/":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGetUserProfileUrl=t.getUserProfileEndpoint=t.sessionEndpoint=t.getUserRecords=t.getUsername=t.createUser=t.newBand=t.modifyBand=t.postBands=t.authenticate=t.serverUrl=void 0,t.serverUrl="",t.authenticate="/api/authenticate",t.postBands="/api/bands",t.modifyBand="/api/band/modify",t.newBand="/api/band/new",t.createUser="/api/create-user",t.getUsername="/api/usernames/get",t.getUserRecords="/api/users/get",t.sessionEndpoint="/api/session";t.getUserProfileEndpoint="/api/user-profile/:userId",t.createGetUserProfileUrl=function(e){return"/api/user-profile/"+e}},XCa7:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__generator||function(e,t){var r,n,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.checkSessionSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=s(r("VYM/")),d=r("fqsA");t.checkSessionSaga=function(){var e,t,r,n,a;return o(this,(function(s){switch(s.label){case 0:return[4,l.take(d.sessionActions.requestCheckSession.type)];case 1:s.sent(),s.label=2;case 2:return s.trys.push([2,8,,10]),[4,l.call(i.default.get,c.serverUrl+c.sessionEndpoint,{withCredentials:!0})];case 3:return 200!=(e=s.sent()).status?[3,5]:(t=e.data,r=t.userId,n=t.username,a=t.bandsModified,[4,l.put(d.sessionActions.checkSessionSuccess({userId:r,username:n,bandsModified:a}))]);case 4:return s.sent(),[3,7];case 5:return[4,l.put(d.sessionActions.checkSessionFailure())];case 6:s.sent(),s.label=7;case 7:return[3,10];case 8:return s.sent(),[4,l.put(d.sessionActions.checkSessionFailure())];case 9:return s.sent(),[3,10];case 10:return[3,0];case 11:return[2]}}))}},Xep1:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bandActions=void 0;var n=r("i7Pf"),a=r("7Fo/"),s={pendingFetches:0,items:[],creationStatus:a.BandCreationStatuses.NOT_TRYING,scoreModificationState:{status:a.BandScoreModificationStatuses.NOT_TRYING}},o=n.createSlice({name:"bands",initialState:s,reducers:{requestFetchBands:function(e,t){e.pendingFetches++},fetchBandsSuccess:function(e,t){t.payload.forEach((function(t){e.items.some((function(e){return e._id==t._id}))||e.items.push(t)})),e.pendingFetches--},fetchBandsFailure:function(e){e.pendingFetches--},requestCreateBand:function(e,t){e.creationStatus=a.BandCreationStatuses.CREATING},createBandSuccess:function(e,t){e.creationStatus=a.BandCreationStatuses.CREATED,e.items.push(t.payload)},createBandFailure:function(e,t){e.creationStatus=t.payload},requestModifyBandScore:function(e,t){e.scoreModificationState.status=a.BandScoreModificationStatuses.ATTEMPTING,e.scoreModificationState.target=t.payload.targetBandId},modifyBandScoreSuccess:function(e,t){var r=e.items.findIndex((function(e){return e._id===t.payload.targetBandId}));e.items[r].score+=t.payload.modificationValue,e.scoreModificationState.status=a.BandScoreModificationStatuses.SUCCESS},modifyBandScoreFailure:function(e){e.scoreModificationState.status=a.BandScoreModificationStatuses.FAILURE,e.scoreModificationState.target=void 0}}});t.bandActions=o.actions,t.default=o.reducer},YZbJ:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var s=arguments[t],o=0,u=s.length;o<u;o++,a++)n[a]=s[o];return n},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.store=void 0;var i=r("ANjH"),l=u(r("rRWa")),c=r("i7Pf"),d=u(r("Xep1")),f=u(r("fqsA")),p=u(r("tIUU")),h=u(r("4tJo")),m=s(r("uHhB")),y=l.default(),S=o(c.getDefaultMiddleware({thunk:!1}),[y]),_=i.combineReducers({bands:d.default,session:f.default,userRecords:p.default,userProfile:h.default});for(var b in t.store=c.configureStore({reducer:_,middleware:S}),m)y.run(m[b])},"bU5+":function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__generator||function(e,t){var r,n,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.userCreationSaga=void 0;var i=r("5rFJ"),l=u(r("vDqi")),c=s(r("VYM/")),d=r("fqsA"),f=r("7Fo/");t.userCreationSaga=function(){var e,t,r,n,a;return o(this,(function(s){switch(s.label){case 0:return[4,i.take(d.sessionActions.requestCreateUser.type)];case 1:return e=s.sent().payload,t=e.username,r=e.password,n=e.repeatPassword,r===n?[3,3]:[4,i.put(d.sessionActions.createUserFailure({reason:f.UserCreationStatuses.PASSWORDS_DONT_MATCH}))];case 2:return s.sent(),[3,9];case 3:return s.trys.push([3,7,,9]),[4,i.call(l.default.post,c.serverUrl+c.createUser,{username:t,password:r})];case 4:return 200!=s.sent().status?[3,6]:[4,i.put(d.sessionActions.createUserSuccess())];case 5:s.sent(),s.label=6;case 6:return[3,9];case 7:return a=s.sent(),[4,i.put(d.sessionActions.createUserFailure({reason:a.response.data.reason}))];case 8:return s.sent(),[3,9];case 9:return[3,0];case 10:return[2]}}))}},"f7N+":function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},o=this&&this.__generator||function(e,t){var r,n,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(r)throw new TypeError("Generator is already executing.");for(;o;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,n=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=o.trys,(a=a.length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fetchProfileSaga=void 0;var i=r("5rFJ"),l=u(r("vDqi")),c=s(r("VYM/")),d=r("4tJo"),f=r("VYM/");t.fetchProfileSaga=function(){var e,t,r;return o(this,(function(n){switch(n.label){case 0:return[4,i.take(d.userProfileActions.requestFetchUserProfile.type)];case 1:e=n.sent().payload,t=e.targetId,n.label=2;case 2:return n.trys.push([2,8,,10]),[4,i.call(l.default.get,c.serverUrl+f.createGetUserProfileUrl(t))];case 3:return 200!=(r=n.sent()).status?[3,5]:[4,i.put(d.userProfileActions.fetchUserProfileSuccess({profile:r.data.profile}))];case 4:return n.sent(),[3,7];case 5:return[4,i.put(d.userProfileActions.fetchUserProfileFailure())];case 6:n.sent(),n.label=7;case 7:return[3,10];case 8:return n.sent(),[4,i.put(d.userProfileActions.fetchUserProfileFailure())];case 9:return n.sent(),[3,10];case 10:return[3,0];case 11:return[2]}}))}},fqsA:function(e,t,r){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.sessionActions=void 0;var a=r("i7Pf"),s=r("7Fo/"),o=r("Xep1"),u={authenticationStatus:s.AuthenticationStatuses.NOT_TRYING,userId:void 0,username:void 0,userCreationStatus:s.UserCreationStatuses.NOT_TRYING,bandsModified:[]},i=a.createSlice({name:"session",initialState:u,reducers:{requestCheckSession:function(e){e.authenticationStatus=s.AuthenticationStatuses.AUTHENTICATING},checkSessionSuccess:function(e,t){e.authenticationStatus=s.AuthenticationStatuses.AUTHENTICATED,e.userId=t.payload.userId,e.username=t.payload.username,e.bandsModified=t.payload.bandsModified},checkSessionFailure:function(e){e.authenticationStatus=s.AuthenticationStatuses.NOT_TRYING},requestAuthenticateUser:function(e,t){e.authenticationStatus=s.AuthenticationStatuses.AUTHENTICATING},authenticateUserSuccess:function(e,t){e.authenticationStatus=s.AuthenticationStatuses.AUTHENTICATED,e.userId=t.payload.userId,e.username=t.payload.username,e.bandsModified=t.payload.bandsModified},authenticateUserFailure:function(e,t){e.authenticationStatus=t.payload.reason,e.userId=void 0},requestLogout:function(e){e.authenticationStatus=s.AuthenticationStatuses.LOGGING_OUT},logoutFailure:function(e){e.authenticationStatus=s.AuthenticationStatuses.SERVER_ERROR},logoutSuccess:function(e){u},requestCreateUser:function(e,t){e.userCreationStatus=s.UserCreationStatuses.PROCESSING},createUserSuccess:function(e){e.userCreationStatus=s.UserCreationStatuses.SUCCESS},createUserFailure:function(e,t){e.userCreationStatus=t.payload.reason}},extraReducers:(n={},n[o.bandActions.modifyBandScoreSuccess.type]=function(e,t){e.bandsModified.push({targetBandId:t.payload.targetBandId,value:t.payload.modificationValue})},n)});t.sessionActions=i.actions,t.default=i.reducer},g6pE:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Main=void 0;var a=n(r("q1tI")),s=r("/MKj"),o=r("55Ip"),u=r("YZbJ"),i=r("+WgK"),l=r("t+eW"),c=r("mUFl"),d=r("mlUh"),f=r("7hBq"),p=r("OEB8"),h=r("PVq7");t.Main=function(){return a.default.createElement(o.Router,{history:i.history},a.default.createElement(s.Provider,{store:u.store},a.default.createElement("div",null,a.default.createElement(f.Navigation,null),a.default.createElement(o.Route,{exact:!0,path:"/bands",component:l.BigBandTable}),a.default.createElement(o.Route,{exact:!0,path:"/login",component:d.Login}),a.default.createElement(o.Route,{exact:!0,path:"/new-user",component:p.NewUserForm}),a.default.createElement(o.Route,{exact:!0,path:"/",component:c.Landing}),a.default.createElement(o.Route,{path:"/users/:userId",component:function(e){var t=e.match;return a.default.createElement(h.UserProfile,{id:t.params.userId})}}))))}},mUFl:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Landing=void 0;var a=n(r("q1tI")),s=r("AEI1"),o=r("t+eW"),u=n(r("7vrA")),i=n(r("3Z9Z")),l=n(r("JI6e")),c=n(r("6xyR")),d=r("u/DC"),f=r("7Fo/");t.Landing=function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement(u.default,null,a.default.createElement(i.default,{className:"mb-5"},a.default.createElement(l.default,{md:8,className:"mb-3"},a.default.createElement(s.CreateBandForm,null),a.default.createElement(o.BigBandTable,null)),a.default.createElement(l.default,{md:4},a.default.createElement(c.default,{className:"mb-3"},a.default.createElement(c.default.Header,null,a.default.createElement("h5",null,"Most Names Contributed")),a.default.createElement(c.default.Body,null,a.default.createElement(d.UserRecordsList,{maxRecords:10,sortType:f.UserRecordSortTypes.MOST_NAMES_CONTRIBUTED}))),a.default.createElement(c.default,{className:"mb-3"},a.default.createElement(c.default.Header,null,a.default.createElement("h5",null,"Highest Average Score")),a.default.createElement(c.default.Body,null,a.default.createElement(d.UserRecordsList,{maxRecords:10,sortType:f.UserRecordSortTypes.HIGHEST_AVERAGE_SCORE}))),a.default.createElement(c.default,{className:"mb-3"},a.default.createElement(c.default.Header,null,a.default.createElement("h5",null,"Highest Score")),a.default.createElement(c.default.Body,null,a.default.createElement(d.UserRecordsList,{maxRecords:10,sortType:f.UserRecordSortTypes.HIGHEST_SCORE})))))))}},mlUh:function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Login=void 0;var o=s(r("q1tI")),u=s(r("cWnB")),i=s(r("TUci")),l=s(r("7vrA")),c=s(r("6xyR")),d=s(r("QojX")),f=r("/MKj"),p=r("7Fo/"),h=r("fqsA"),m=s(r("T/rR")),y=function(e){return{authenticationStatus:e.session.authenticationStatus}},S=function(e){return{authenticateUser:function(t,r){return e(h.sessionActions.requestAuthenticateUser({username:t,password:r}))}}},_=(f.connect(y,S),function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={username:"",password:""},t}return a(t,e),t.prototype.render=function(){var e=this,t=this.props,r=t.authenticationStatus,n=t.authenticateUser;return o.default.createElement(l.default,null,o.default.createElement(c.default,{style:{maxWidth:"36rem"},className:"mx-auto"},o.default.createElement(c.default.Body,null,o.default.createElement(d.default,null,o.default.createElement(d.default.Group,{controlId:"formBasicUsername"},o.default.createElement(d.default.Label,null,"Username"),o.default.createElement(d.default.Control,{type:"text",isInvalid:r==p.AuthenticationStatuses.USERNAME_NOT_FOUND,onChange:function(t){return e.setState({username:t.target.value})}}),o.default.createElement(d.default.Text,{className:"text-muted"},"New user? Create an account ",o.default.createElement("a",{href:"/new-user"},"here"),"."),o.default.createElement(d.default.Control.Feedback,{type:"invalid"},"Please enter a valid username.")),o.default.createElement(d.default.Group,{controlId:"formBasicPassword"},o.default.createElement(d.default.Label,null,"Password"),o.default.createElement(d.default.Control,{type:"password",isInvalid:r==p.AuthenticationStatuses.INVALID_PASSWORD,onChange:function(t){return e.setState({password:t.target.value})}}),o.default.createElement(d.default.Control.Feedback,{type:"invalid"},"Incorrect password.")),o.default.createElement(u.default,{variant:"primary",type:"button",disabled:r==p.AuthenticationStatuses.AUTHENTICATING||r==p.AuthenticationStatuses.AUTHENTICATED,onClick:function(){return n(e.state.username,e.state.password)}},"Submit"),r==p.AuthenticationStatuses.AUTHENTICATING&&o.default.createElement(i.default,{variant:"info"},o.default.createElement(m.default,{animation:"border",variant:"primary"})," Processing..."),r==p.AuthenticationStatuses.AUTHENTICATED&&o.default.createElement(i.default,{variant:"success"},"Successfully logged in!")))))},t}(o.default.Component));t.Login=f.connect(y,S)(_)},n7of:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createUserProfileUrl=void 0,t.createUserProfileUrl=function(e){return"/users/"+e}},qgVz:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=n(r("q1tI")),s=n(r("i8i4")),o=r("g6pE");r("q4sD"),s.default.render(a.default.createElement(o.Main,null),document.getElementById("app"))},"t+eW":function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var s=arguments[t],o=0,u=s.length;o<u;o++,a++)n[a]=s[o];return n},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BigBandTable=void 0;var u=o(r("q1tI")),i=o(r("cWnB")),l=o(r("pJDg")),c=o(r("65eO")),d=o(r("6xyR")),f=o(r("MBJH")),p=o(r("hlKo")),h=r("/MKj"),m=r("7Fo/"),y=r("Xep1"),S=r("vpfB"),_=r("1HUD"),b=r("n7of"),v=r("55Ip"),E=o(r("T/rR"));function g(e){return{appIsFetchingBands:e.bands.pendingFetches>0,bands:s(e.bands.items),userIsAuthenticated:e.session.authenticationStatus==m.AuthenticationStatuses.AUTHENTICATED,userId:e.session.userId,usersModifications:e.session.bandsModified}}function T(e){return{addPointsTo:function(t,r,n,a){n&&e(y.bandActions.requestModifyBandScore({targetBandId:t,modifyingUserId:n,modificationValue:r,undoValue:a}))},requestFetchBands:function(t,r){e(y.bandActions.requestFetchBands({maxBands:t,sortBy:r}))}}}h.connect(g,T);var A=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={sortType:m.BandSortTypes.MOST_RECENT,bandsPerFetch:20,shouldFetchBands:!1,maxBandsDisplayed:20},t}return a(t,e),t.prototype.componentDidMount=function(){this.props.requestFetchBands(this.state.bandsPerFetch,this.state.sortType)},t.prototype.componentDidUpdate=function(e,t){(this.state.maxBandsDisplayed>t.maxBandsDisplayed||this.state.shouldFetchBands)&&(this.props.requestFetchBands(this.state.maxBandsDisplayed,this.state.sortType),this.setState({shouldFetchBands:!1})),this.state.sortType!==t.sortType&&this.setState({maxBandsDisplayed:this.state.bandsPerFetch,shouldFetchBands:!0})},t.prototype.setSortType=function(e){this.setState({sortType:e})},t.prototype.loadMore=function(){this.setState((function(e){return{maxBandsDisplayed:e.maxBandsDisplayed+e.bandsPerFetch}}))},t.prototype.getUserModificationToBand=function(e){var t=this.props.usersModifications.find((function(t){return t.targetBandId===e}));return t?t.value:0},t.prototype.render=function(){var e=this,t=S.sortAndLimitBands(this.props.bands,this.state.sortType,this.state.maxBandsDisplayed),r=[{value:m.BandSortTypes.BEST,name:"Best"},{value:m.BandSortTypes.WORST,name:"Worst"},{value:m.BandSortTypes.MOST_RECENT,name:"Most Recent"}],n=this.props.userIsAuthenticated;return u.default.createElement(d.default,null,u.default.createElement(d.default.Header,null,u.default.createElement(l.default,{toggle:!0},r.map((function(t,r){return u.default.createElement(p.default,{key:r,type:"radio",value:t.value,name:"sortRadio",checked:t.value===e.state.sortType,onChange:function(t){t.preventDefault();var r=t.currentTarget,n=parseInt(r.value);e.setSortType(n)}},t.name)})))),u.default.createElement(d.default.Body,null,u.default.createElement(f.default,{size:"sm",striped:!0,bordered:!0},u.default.createElement("tbody",null,this.props.appIsFetchingBands?u.default.createElement(u.default.Fragment,null,function(e){for(var t=[],r=0;r<e;r++)t.push(U());return t}(20)):u.default.createElement(u.default.Fragment,null,t.map((function(t){return u.default.createElement("tr",{key:String(t._id)},u.default.createElement("td",null,u.default.createElement(_.BandModButtonGroup,{userIsAuthorized:n,modPerformed:e.getUserModificationToBand(t._id),modifyBand:function(r,n){return e.props.addPointsTo(t._id,r,e.props.userId,n)},currentScore:t.score})," ",u.default.createElement(c.default,{variant:"secondary"},t.score)," ",t.name," ",u.default.createElement("span",{className:"font-weight-lighter"},"from"," ",u.default.createElement(v.Link,{to:b.createUserProfileUrl(String(t.ownerId))},t.ownerName))))}))))),u.default.createElement(i.default,{variant:"secondary",block:!0,onClick:function(){return e.loadMore()}},"Show me more...")))},t}(u.default.Component);var U=function(){return u.default.createElement("tr",null,u.default.createElement("td",null,u.default.createElement(_.PlaceholderBandModButtonGroup,null)," ",u.default.createElement(E.default,{animation:"border",variant:"primary",size:"sm"})))};t.BigBandTable=h.connect(g,T)(A)},tIUU:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.userRecordsActions=void 0;var n=r("i7Pf").createSlice({name:"userRecords",initialState:{pendingFetches:0,items:[]},reducers:{requestFetchUserRecords:function(e,t){e.pendingFetches++},fetchUserRecordsSuccess:function(e,t){t.payload.forEach((function(t){e.items.some((function(e){return e.id==t.id}))||e.items.push(t)})),e.pendingFetches--},fetchUserRecordsFailure:function(e){e.pendingFetches--}}});t.userRecordsActions=n.actions,t.default=n.reducer},"u/DC":function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),s=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var s=arguments[t],o=0,u=s.length;o<u;o++,a++)n[a]=s[o];return n},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UserRecordsList=void 0;var u=o(r("q1tI")),i=r("/MKj"),l=r("7Fo/"),c=r("tIUU"),d=r("6pyq"),f=o(r("MBJH")),p=o(r("65eO")),h=r("55Ip"),m=r("n7of");function y(e){return{appIsFetchingRecords:e.userRecords.pendingFetches>0,records:s(e.userRecords.items)}}function S(e){return{requestUserRecords:function(t,r){e(c.userRecordsActions.requestFetchUserRecords({numOfRecords:t,sortType:r}))}}}function _(e){switch(e.sortType){case l.UserRecordSortTypes.HIGHEST_AVERAGE_SCORE:return u.default.createElement(p.default,{variant:"secondary"},e.record.averageScore.toFixed(2));case l.UserRecordSortTypes.HIGHEST_SCORE:return u.default.createElement(p.default,{variant:"secondary"},e.record.totalScore);case l.UserRecordSortTypes.MOST_NAMES_CONTRIBUTED:return u.default.createElement(p.default,{variant:"secondary"},e.record.namesContributed);default:return u.default.createElement(p.default,{variant:"secondary"},"?")}}i.connect(y,S);var b=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.prototype.componentDidMount=function(){this.props.requestUserRecords(this.props.maxRecords,this.props.sortType)},t.prototype.render=function(){var e=this;if(this.props.appIsFetchingRecords)return u.default.createElement("div",null,"Loading user records...");var t=d.sortAndLimitUserRecords(this.props.records,this.props.sortType,this.props.maxRecords);return u.default.createElement(f.default,{size:"sm",striped:!0,bordered:!0},u.default.createElement("tbody",null,t.map((function(t,r){return u.default.createElement("tr",{key:String(t.id)},u.default.createElement("td",null,r+1),u.default.createElement("td",null,u.default.createElement(h.Link,{to:m.createUserProfileUrl(String(t.id))},t.name)," ",u.default.createElement(_,{sortType:e.props.sortType,record:t})))}))))},t}(u.default.Component);t.UserRecordsList=i.connect(y,S)(b)},uHhB:function(e,t,r){"use strict";r.r(t);var n=r("7Zh8");r.d(t,"bandCreationSaga",(function(){return n.bandCreationSaga}));var a=r("UpH7");r.d(t,"bandScoreModificationSaga",(function(){return a.bandScoreModificationSaga}));var s=r("O5yZ");r.d(t,"userAuthenticationSaga",(function(){return s.userAuthenticationSaga}));var o=r("bU5+");r.d(t,"userCreationSaga",(function(){return o.userCreationSaga}));var u=r("NL3p");r.d(t,"watchFetchBandsSaga",(function(){return u.watchFetchBandsSaga}));var i=r("U6Ra");r.d(t,"watchFetchUserRecordsSaga",(function(){return i.watchFetchUserRecordsSaga}));var l=r("f7N+");r.d(t,"fetchProfileSaga",(function(){return l.fetchProfileSaga}));var c=r("XCa7");r.d(t,"checkSessionSaga",(function(){return c.checkSessionSaga}));var d=r("EP/U");r.d(t,"logoutSaga",(function(){return d.logoutSaga}))},vpfB:function(e,t,r){"use strict";var n=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var s=arguments[t],o=0,u=s.length;o<u;o++,a++)n[a]=s[o];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.sortAndLimitBands=void 0;var a=r("7Fo/");t.sortAndLimitBands=function(e,t,r){var s=n(e);switch(t){case a.BandSortTypes.BEST:s.sort((function(e,t){return t.score-e.score}));break;case a.BandSortTypes.MOST_RECENT:s.sort((function(e,t){return Date.parse(t.createdOn)-Date.parse(e.createdOn)}));break;case a.BandSortTypes.WORST:s.sort((function(e,t){return e.score-t.score}))}return s=s.slice(0,r)}}},[["qgVz",1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,