(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"+WgK":function(e,t,r){"use strict";r.r(t),r.d(t,"history",(function(){return a}));var n=r("LhCv");const a=Object(n.a)()},"1HUD":function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BandModButtonGroup=void 0;var s=o(r("q1tI")),u=o(r("QKck")),i=o(r("hlKo")),l=r("X13+"),c=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={modValue:t.props.modPerformed},t}return a(t,e),t.prototype.componentDidUpdate=function(e,t){this.state.modValue!=t.modValue&&(0==this.state.modValue?this.props.modifyBand&&this.props.modifyBand(0,t.modValue):this.props.modifyBand&&this.props.modifyBand(this.state.modValue))},t.prototype.render=function(){var e=this,t=this.props,r=t.userIsAuthorized,n=t.modPerformed;return s.default.createElement(u.default,{name:"modButtons",value:this.state.modValue,onChange:function(t){return e.setState({modValue:e.state.modValue+t})}},s.default.createElement(i.default,{name:"negativeButton",value:-1,disabled:!r,checked:-1==n},-1==this.state.modValue?s.default.createElement(l.BsCaretDownFill,null):s.default.createElement(l.BsCaretDown,null)),s.default.createElement(i.default,{name:"positiveButton",value:1,disabled:!r,checked:1==n},1==this.state.modValue?s.default.createElement(l.BsCaretUpFill,null):s.default.createElement(l.BsCaretUp,null)))},t}(s.default.Component);t.BandModButtonGroup=c},"4tJo":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.userProfileActions=void 0;var n=r("i7Pf"),a=r("7Fo/"),o={fetchStatus:a.ProfileFetchStatuses.NOT_TRYING,profile:void 0},s=n.createSlice({name:"userProfile",initialState:o,reducers:{requestFetchUserProfile:function(e,t){e.fetchStatus=a.ProfileFetchStatuses.ATTEMPTING},fetchUserProfileSuccess:function(e,t){e.fetchStatus=a.ProfileFetchStatuses.SUCCESS,e.profile=t.payload.profile},fetchUserProfileFailure:function(e){e.fetchStatus=a.ProfileFetchStatuses.FAILURE,e.profile=void 0}}});t.userProfileActions=s.actions,t.default=s.reducer},"6pyq":function(e,t,r){"use strict";var n=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var o=arguments[t],s=0,u=o.length;s<u;s++,a++)n[a]=o[s];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.sortAndLimitUserRecords=void 0;var a=r("7Fo/");t.sortAndLimitUserRecords=function(e,t,r){var o=n(e);switch(t){case a.UserRecordSortTypes.HIGHEST_AVERAGE_SCORE:o.sort((function(e,t){return t.averageScore-e.averageScore}));break;case a.UserRecordSortTypes.HIGHEST_SCORE:o.sort((function(e,t){return t.totalScore-e.totalScore}));break;case a.UserRecordSortTypes.MOST_NAMES_CONTRIBUTED:o.sort((function(e,t){return t.namesContributed-e.namesContributed}))}return o=o.slice(0,r)}},"7Fo/":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UserCreationStatuses=t.AuthenticationStatuses=t.ProfileFetchStatuses=t.BandScoreModificationStatuses=t.BandSortTypes=t.BandCreationStatuses=t.UserRecordSortTypes=void 0,function(e){e[e.HIGHEST_SCORE=0]="HIGHEST_SCORE",e[e.HIGHEST_AVERAGE_SCORE=1]="HIGHEST_AVERAGE_SCORE",e[e.MOST_NAMES_CONTRIBUTED=2]="MOST_NAMES_CONTRIBUTED"}(t.UserRecordSortTypes||(t.UserRecordSortTypes={})),function(e){e[e.CREATING=0]="CREATING",e[e.CREATED=1]="CREATED",e[e.ERROR=2]="ERROR",e[e.BAND_EXISTS=3]="BAND_EXISTS",e[e.NOT_TRYING=4]="NOT_TRYING"}(t.BandCreationStatuses||(t.BandCreationStatuses={})),function(e){e[e.BEST=0]="BEST",e[e.WORST=1]="WORST",e[e.MOST_RECENT=2]="MOST_RECENT"}(t.BandSortTypes||(t.BandSortTypes={})),function(e){e[e.ATTEMPTING=0]="ATTEMPTING",e[e.SUCCESS=1]="SUCCESS",e[e.FAILURE=2]="FAILURE",e[e.NOT_TRYING=3]="NOT_TRYING"}(t.BandScoreModificationStatuses||(t.BandScoreModificationStatuses={})),function(e){e[e.ATTEMPTING=0]="ATTEMPTING",e[e.SUCCESS=1]="SUCCESS",e[e.FAILURE=2]="FAILURE",e[e.NOT_TRYING=3]="NOT_TRYING"}(t.ProfileFetchStatuses||(t.ProfileFetchStatuses={})),function(e){e[e.AUTHENTICATING=0]="AUTHENTICATING",e[e.AUTHENTICATED=1]="AUTHENTICATED",e[e.NOT_AUTHENTICATED=2]="NOT_AUTHENTICATED",e[e.NOT_TRYING=3]="NOT_TRYING",e[e.SERVER_ERROR=4]="SERVER_ERROR",e[e.USERNAME_NOT_FOUND=5]="USERNAME_NOT_FOUND",e[e.INVALID_PASSWORD=6]="INVALID_PASSWORD",e[e.LOGGING_OUT=7]="LOGGING_OUT"}(t.AuthenticationStatuses||(t.AuthenticationStatuses={})),function(e){e[e.PROCESSING=0]="PROCESSING",e[e.PASSWORDS_DONT_MATCH=1]="PASSWORDS_DONT_MATCH",e[e.USERNAME_TAKEN=2]="USERNAME_TAKEN",e[e.NOT_TRYING=3]="NOT_TRYING",e[e.SERVER_ERROR=4]="SERVER_ERROR",e[e.SUCCESS=5]="SUCCESS",e[e.EMPTY_FIELDS=6]="EMPTY_FIELDS",e[e.INVALID_EMAIL=7]="INVALID_EMAIL",e[e.EMAIL_TAKEN=8]="EMAIL_TAKEN"}(t.UserCreationStatuses||(t.UserCreationStatuses={}))},"7Zh8":function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},s=this&&this.__generator||function(e,t){var r,n,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=s.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.bandCreationSaga=void 0;var i=r("5rFJ"),l=u(r("vDqi")),c=o(r("VYM/")),d=r("Xep1");t.bandCreationSaga=function(){var e,t,r,n,a,o,u,f;return s(this,(function(s){switch(s.label){case 0:return[4,i.take(d.bandActions.requestCreateBand.type)];case 1:return e=s.sent().payload,console.log("Saga payload: ",e),t=e.creatingUserId,r=e.bandName,n=e.creatingUsername,a={bandName:r,ownerId:t,ownerName:n},[4,i.call(l.default.post,c.serverUrl+c.newBand,a)];case 2:o=s.sent(),s.label=3;case 3:if(s.trys.push([3,5,,7]),200!=o.status)throw new Error;return u=o.newBand,[4,i.put(d.bandActions.createBandSuccess(u))];case 4:return s.sent(),[3,7];case 5:return s.sent(),f=o.data.reason,[4,i.put(d.bandActions.createBandFailure(f))];case 6:return s.sent(),[3,7];case 7:return[3,0];case 8:return[2]}}))}},"7hBq":function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Navigation=void 0;var a=n(r("q1tI")),o=n(r("+YzT")),s=n(r("6ctO")),u=r("/MKj"),i=r("7Fo/"),l=r("+Tvs"),c=r("fqsA"),d=function(e){var t=e.session;return{authenticationStatus:t.authenticationStatus,username:t.username}};function f(e){return{logout:function(){e(c.sessionActions.requestLogout())}}}u.connect(d,f);t.Navigation=u.connect(d,f)((function(e){return a.default.createElement(s.default,{bg:"light",className:"mb-3"},a.default.createElement(l.LinkContainer,{to:"/"},a.default.createElement(s.default.Brand,null,"wababc?")),e.authenticationStatus==i.AuthenticationStatuses.AUTHENTICATED?a.default.createElement(a.default.Fragment,null,a.default.createElement(o.default.Item,null,"Signed in as ",e.username),a.default.createElement(o.default.Link,{onClick:function(){return e.logout()}},"Logout")):a.default.createElement(l.LinkContainer,{to:"/login"},a.default.createElement(o.default.Link,null,"Login")))}))},AEI1:function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CreateBandForm=void 0;var s=o(r("q1tI")),u=r("/MKj"),i=r("Xep1"),l=o(r("zUrK")),c=o(r("jDKy")),d=o(r("cWnB")),f=o(r("TUci")),p=r("7Fo/"),h=r("+Tvs"),m=function(){return s.default.createElement(f.default,{variant:"danger"},s.default.createElement(f.default.Heading,null,"This MF said “ ”"),s.default.createElement("p",null,"Who are you? John Cage XD? Just kidding, don't know who that is."))};function y(){return s.default.createElement(f.default,{variant:"danger"},s.default.createElement(f.default.Heading,null,"Somebody already thought of that!"),s.default.createElement("p",null,"Going to have to try harder. Maybe read a very complicated book and then think of some reference to that."))}function _(){return s.default.createElement(f.default,{variant:"warning"},s.default.createElement(f.default.Heading,null,"You've gotta be signed in!"),s.default.createElement("p",null,"We don't let just anyone in here. You can"," ",s.default.createElement(h.LinkContainer,{to:"/new-user"},s.default.createElement(f.default.Link,null,"make an account here")),", though, if you want."))}function S(){return s.default.createElement(f.default,{variant:"success"},s.default.createElement(f.default.Heading,null,"Name submitted!"),s.default.createElement("p",null,"Now that's funny."))}function v(e){return{authenticationStatus:e.session.authenticationStatus,userId:e.session.userId,username:e.session.username}}function b(e){return{createBand:function(t,r,n){e(i.bandActions.requestCreateBand({creatingUserId:t,creatingUsername:r,bandName:n}))}}}u.connect(v,b);var E=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={bandName:"",displayBandExistsAlert:!1,displayUserNotLoggedIn:!1,displayNoNameAlert:!1,displayProgess:!1,displaySuccess:!1},t}return a(t,e),t.prototype.handleClick=function(){this.props.authenticationStatus==p.AuthenticationStatuses.AUTHENTICATED?""==this.state.bandName?this.setState({displayBandExistsAlert:!1,displayUserNotLoggedIn:!1,displayNoNameAlert:!0}):(this.props.createBand(this.props.userId,this.props.username,this.state.bandName),this.setState({displayBandExistsAlert:!1,displayUserNotLoggedIn:!1,displayNoNameAlert:!1,displayProgess:!1,displaySuccess:!0})):this.setState({displayBandExistsAlert:!1,displayUserNotLoggedIn:!0,displayNoNameAlert:!1})},t.prototype.render=function(){var e=this,t=this.state,r=t.displayBandExistsAlert,n=t.displayNoNameAlert,a=(t.displayProgess,t.displayUserNotLoggedIn),o=t.displaySuccess;return s.default.createElement("div",{className:"mb-3"},s.default.createElement(l.default,{size:"lg"},s.default.createElement(c.default,{type:"text",placeholder:"What about a band called...",onChange:function(t){return e.setState({bandName:t.target.value})}}),s.default.createElement(l.default.Append,null,s.default.createElement(d.default,{variant:"primary",onClick:function(){return e.handleClick()}},"Submit"))),a?s.default.createElement(_,null):null,n?s.default.createElement(m,null):null,r?s.default.createElement(y,null):null,o?s.default.createElement(S,null):null)},t}(s.default.Component);t.CreateBandForm=u.connect(v,b)(E)},KiFf:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getTimeSince=void 0;t.getTimeSince=function(e){var t=Date.now()-e.getMilliseconds();if(t<6e4)return"1m";if(t<36e5)return(r=Math.floor(t/6e4))+"m";if(t<864e5){var r,n=Math.floor(t/36e5)+"h";return(r=Math.floor(t%36e5/6e4))>0&&(n+=" "+r+"m"),n}if(t<31536e6)return Math.floor(t/864e5)+"d";var a=Math.floor(t/31536e6),o=Math.floor(t%31536e6/864e5),s=a+"y";return o>0&&(s+=" "+o+"d"),s}},NL3p:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},s=this&&this.__generator||function(e,t){var r,n,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=s.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fetchBands=t.watchFetchBandsSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=o(r("VYM/")),d=r("Xep1");function f(e,t){var r;return s(this,(function(n){switch(n.label){case 0:return n.trys.push([0,3,,5]),[4,l.call(i.default.post,c.serverUrl+c.postBands,{maxBands:e,sortBy:t})];case 1:if(200!=(r=n.sent()).status)throw new Error;return[4,l.put(d.bandActions.fetchBandsSuccess(r.data))];case 2:return n.sent(),[3,5];case 3:return n.sent(),[4,l.put(d.bandActions.fetchBandsFailure())];case 4:return n.sent(),[3,5];case 5:return[2]}}))}t.watchFetchBandsSaga=function(){var e,t,r,n;return s(this,(function(a){switch(a.label){case 0:return[4,l.actionChannel(d.bandActions.requestFetchBands.type)];case 1:e=a.sent(),a.label=2;case 2:return[4,l.take(e)];case 3:return t=a.sent().payload,r=t.maxBands,n=t.sortBy,[4,l.call(f,r,n)];case 4:return a.sent(),[3,2];case 5:return[2]}}))},t.fetchBands=f},O5yZ:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},s=this&&this.__generator||function(e,t){var r,n,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=s.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.userAuthenticationSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=o(r("VYM/")),d=r("fqsA");t.userAuthenticationSaga=function(){var e,t,r,n,a,o,u,f;return s(this,(function(s){switch(s.label){case 0:return[4,l.take(d.sessionActions.requestAuthenticateUser.type)];case 1:e=s.sent().payload,t=e.username,r=e.password,s.label=2;case 2:return s.trys.push([2,6,,10]),[4,l.call(i.default.post,c.serverUrl+c.authenticate,{username:t,password:r})];case 3:return n=s.sent(),a=n.data,o=a.userId,u=a.bandsModified,console.log("bandsModified in userAuthenticationSaga: ",u),200!=n.status?[3,5]:[4,l.put(d.sessionActions.authenticateUserSuccess({userId:o,username:t,bandsModified:u}))];case 4:s.sent(),s.label=5;case 5:return[3,10];case 6:return(f=s.sent()).response?[4,l.put(d.sessionActions.authenticateUserFailure({reason:f.response.data.reason}))]:[3,8];case 7:return s.sent(),[3,9];case 8:console.error(f),s.label=9;case 9:return[3,10];case 10:return[3,0];case 11:return[2]}}))}},OEB8:function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.NewUserForm=t.UnconnectedNewUserForm=void 0;var s=o(r("q1tI")),u=o(r("cWnB")),i=o(r("7vrA")),l=o(r("6xyR")),c=o(r("TUci")),d=o(r("QojX")),f=r("/MKj"),p=r("7Fo/"),h=r("fqsA"),m=o(r("T/rR")),y=function(e){return{userCreationStatus:e.session.userCreationStatus}},_=function(e){return{submitForm:function(t,r,n){return e(h.sessionActions.requestCreateUser({username:t,password:r,repeatPassword:n}))}}},S=(f.connect(y,_),function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={email:"",username:"",password:"",repeatPassword:""},t}return a(t,e),t.prototype.render=function(){var e=this,t=this.props.userCreationStatus;return s.default.createElement(i.default,null,s.default.createElement(l.default,{style:{maxWidth:"36rem"},className:"mx-auto"},s.default.createElement(l.default.Body,null,s.default.createElement(d.default,null,s.default.createElement(d.default.Group,{controlId:"formNewUserName"},s.default.createElement(d.default.Label,null,"Username"),s.default.createElement(d.default.Control,{type:"text",onChange:function(t){return e.setState({username:t.target.value})},isInvalid:this.props.userCreationStatus==p.UserCreationStatuses.USERNAME_TAKEN}),s.default.createElement(d.default.Control.Feedback,{type:"invalid"},"Username is already taken.")),s.default.createElement(d.default.Group,{controlId:"formNewUserPassword"},s.default.createElement(d.default.Label,null,"Password"),s.default.createElement(d.default.Control,{type:"password",onChange:function(t){return e.setState({password:t.target.value})},isInvalid:this.props.userCreationStatus==p.UserCreationStatuses.PASSWORDS_DONT_MATCH})),s.default.createElement(d.default.Group,{controlId:"formNewUserRepeatPassword"},s.default.createElement(d.default.Label,null,"Repeat Password"),s.default.createElement(d.default.Control,{type:"password",onChange:function(t){return e.setState({repeatPassword:t.target.value})},isInvalid:this.props.userCreationStatus==p.UserCreationStatuses.PASSWORDS_DONT_MATCH}),s.default.createElement(d.default.Control.Feedback,{type:"invalid"},"Passwords don't match.")),s.default.createElement(u.default,{variant:"primary",type:"button",disabled:this.props.userCreationStatus==p.UserCreationStatuses.PROCESSING||this.props.userCreationStatus==p.UserCreationStatuses.SUCCESS,onClick:function(){return e.props.submitForm(e.state.username,e.state.password,e.state.repeatPassword)}},"Submit"),this.props.userCreationStatus==p.UserCreationStatuses.SUCCESS&&s.default.createElement(c.default,{variant:"success"},"Account created! You may now ",s.default.createElement("a",{href:"/login"},"log in"),"."),t==p.UserCreationStatuses.PROCESSING&&s.default.createElement(c.default,{variant:"info"},s.default.createElement(m.default,{animation:"border",variant:"primary"})," Processing...")))))},t}(s.default.Component));t.UnconnectedNewUserForm=S,t.NewUserForm=f.connect(y,_)(S)},PVq7:function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UserProfile=void 0;var s=o(r("q1tI")),u=r("/MKj"),i=r("4tJo"),l=o(r("7vrA")),c=o(r("3Z9Z")),d=o(r("JI6e")),f=o(r("6xyR")),p=o(r("MBJH")),h=o(r("65eO")),m=r("KiFf");var y=u.connect((function(e){return{fetchStatus:e.userProfile.fetchStatus,profile:e.userProfile.profile}}),(function(e){return{requestFetchProfile:function(t){e(i.userProfileActions.requestFetchUserProfile({targetId:t}))}}})),_=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.prototype.componentDidMount=function(){this.props.requestFetchProfile(this.props.id)},t.prototype.render=function(){var e=this.props.profile;return e?s.default.createElement(l.default,null,s.default.createElement(f.default,null,s.default.createElement(f.default.Header,null,s.default.createElement("h5",null,e.name)),s.default.createElement(f.default.Body,null,s.default.createElement(f.default,null,s.default.createElement(f.default.Body,null,s.default.createElement(c.default,null,s.default.createElement(d.default,{md:4},s.default.createElement("div",null,"Total score: ",s.default.createElement("b",null,e.totalScore)),s.default.createElement("div",null,"Average score: ",s.default.createElement("b",null,e.averageScore)),s.default.createElement("div",null,"Names contributed: ",s.default.createElement("b",null,e.namesContributed))),s.default.createElement(d.default,{md:8},s.default.createElement(p.default,{size:"sm",striped:!0,bordered:!0},s.default.createElement("tbody",null,e.bands.map((function(e){return s.default.createElement("tr",{key:String(e._id)},s.default.createElement("td",null,s.default.createElement(h.default,{variant:"secondary"},e.score)," ",s.default.createElement("b",null,e.name)," (created ",m.getTimeSince(new Date(e.createdOn))," ago)"))}))))))))))):null},t}(s.default.Component);t.UserProfile=y(_)},U6Ra:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},s=this&&this.__generator||function(e,t){var r,n,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=s.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fetchUserRecords=t.watchFetchUserRecordsSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=o(r("VYM/")),d=r("tIUU");function f(e,t){var r;return s(this,(function(n){switch(n.label){case 0:return n.trys.push([0,3,,5]),[4,l.call(i.default.post,c.serverUrl+c.getUserRecords,{numOfRecords:e,sortType:t})];case 1:if(200!=(r=n.sent()).status)throw new Error;return[4,l.put(d.userRecordsActions.fetchUserRecordsSuccess(r.data))];case 2:return n.sent(),[3,5];case 3:return n.sent(),[4,l.put(d.userRecordsActions.fetchUserRecordsFailure())];case 4:return n.sent(),[3,5];case 5:return[2]}}))}t.watchFetchUserRecordsSaga=function(){var e,t,r,n;return s(this,(function(a){switch(a.label){case 0:return[4,l.actionChannel(d.userRecordsActions.requestFetchUserRecords.type)];case 1:e=a.sent(),a.label=2;case 2:return[4,l.take(e)];case 3:return t=a.sent().payload,r=t.numOfRecords,n=t.sortType,[4,l.call(f,r,n)];case 4:return a.sent(),[3,2];case 5:return[2]}}))},t.fetchUserRecords=f},UpH7:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},s=this&&this.__generator||function(e,t){var r,n,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=s.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.bandScoreModificationSaga=void 0;var i=u(r("vDqi")),l=r("5rFJ"),c=o(r("VYM/")),d=r("Xep1");t.bandScoreModificationSaga=function(){var e,t,r,n;return s(this,(function(a){switch(a.label){case 0:return[4,l.take(d.bandActions.requestModifyBandScore.type)];case 1:e=a.sent().payload,t=e.targetBandId,r=e.modifyingUserId,n=e.modificationValue,a.label=2;case 2:return a.trys.push([2,8,,10]),console.log("modification value in saga: ",n),[4,l.call(i.default.post,c.serverUrl+c.modifyBand,{targetBandId:t,modifyingUserId:r,modificationValue:n})];case 3:if(200!=a.sent().status)throw new Error;return 0!=n?[3,5]:[4,l.put(d.bandActions.modifyBandScoreSuccess({targetBandId:t,modificationValue:-e.undoValue}))];case 4:return a.sent(),[3,7];case 5:return[4,l.put(d.bandActions.modifyBandScoreSuccess({targetBandId:t,modificationValue:n}))];case 6:a.sent(),a.label=7;case 7:return[3,10];case 8:return a.sent(),[4,l.put(d.bandActions.modifyBandScoreFailure())];case 9:return a.sent(),[3,10];case 10:return[3,0];case 11:return[2]}}))}},"VYM/":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGetUserProfileUrl=t.getUserProfileEndpoint=t.getUserRecords=t.getUsername=t.createUser=t.newBand=t.modifyBand=t.postBands=t.authenticate=t.serverUrl=void 0,t.serverUrl="",t.authenticate="/api/authenticate",t.postBands="/api/bands",t.modifyBand="/api/band/modify",t.newBand="/api/band/new",t.createUser="/api/create-user",t.getUsername="/api/usernames/get",t.getUserRecords="/api/users/get";t.getUserProfileEndpoint="/api/user-profile/:userId",t.createGetUserProfileUrl=function(e){return"/api/user-profile/"+e}},Xep1:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bandActions=void 0;var n=r("i7Pf"),a=r("7Fo/"),o={pendingFetches:0,items:[],creationStatus:a.BandCreationStatuses.NOT_TRYING,scoreModificationState:{status:a.BandScoreModificationStatuses.NOT_TRYING}},s=n.createSlice({name:"bands",initialState:o,reducers:{requestFetchBands:function(e,t){e.pendingFetches++},fetchBandsSuccess:function(e,t){t.payload.forEach((function(t){e.items.some((function(e){return e._id==t._id}))||e.items.push(t)})),e.pendingFetches--},fetchBandsFailure:function(e){e.pendingFetches--},requestCreateBand:function(e,t){e.creationStatus=a.BandCreationStatuses.CREATING},createBandSuccess:function(e,t){e.creationStatus=a.BandCreationStatuses.CREATED,e.items.push(t.payload)},createBandFailure:function(e,t){e.creationStatus=t.payload},requestModifyBandScore:function(e,t){e.scoreModificationState.status=a.BandScoreModificationStatuses.ATTEMPTING,e.scoreModificationState.target=t.payload.targetBandId},modifyBandScoreSuccess:function(e,t){var r=e.items.findIndex((function(e){return e._id===t.payload.targetBandId}));e.items[r].score+=t.payload.modificationValue,e.scoreModificationState.status=a.BandScoreModificationStatuses.SUCCESS},modifyBandScoreFailure:function(e){e.scoreModificationState.status=a.BandScoreModificationStatuses.FAILURE,e.scoreModificationState.target=void 0}}});t.bandActions=s.actions,t.default=s.reducer},YZbJ:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},s=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var o=arguments[t],s=0,u=o.length;s<u;s++,a++)n[a]=o[s];return n},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.store=void 0;var i=r("ANjH"),l=u(r("rRWa")),c=r("i7Pf"),d=u(r("Xep1")),f=u(r("fqsA")),p=u(r("tIUU")),h=u(r("4tJo")),m=o(r("uHhB")),y=l.default(),_=s(c.getDefaultMiddleware({thunk:!1}),[y]),S=i.combineReducers({bands:d.default,session:f.default,userRecords:p.default,userProfile:h.default});for(var v in t.store=c.configureStore({reducer:S,middleware:_}),m)y.run(m[v])},"bU5+":function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},s=this&&this.__generator||function(e,t){var r,n,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=s.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.userCreationSaga=void 0;var i=r("5rFJ"),l=u(r("vDqi")),c=o(r("VYM/")),d=r("fqsA"),f=r("7Fo/");t.userCreationSaga=function(){var e,t,r,n,a;return s(this,(function(o){switch(o.label){case 0:return[4,i.take(d.sessionActions.requestCreateUser.type)];case 1:return e=o.sent().payload,t=e.username,r=e.password,n=e.repeatPassword,r===n?[3,3]:[4,i.put(d.sessionActions.createUserFailure({reason:f.UserCreationStatuses.PASSWORDS_DONT_MATCH}))];case 2:return o.sent(),[3,9];case 3:return o.trys.push([3,7,,9]),[4,i.call(l.default.post,c.serverUrl+c.createUser,{username:t,password:r})];case 4:return 200!=o.sent().status?[3,6]:[4,i.put(d.sessionActions.createUserSuccess())];case 5:o.sent(),o.label=6;case 6:return[3,9];case 7:return a=o.sent(),[4,i.put(d.sessionActions.createUserFailure({reason:a.response.data.reason}))];case 8:return o.sent(),[3,9];case 9:return[3,0];case 10:return[2]}}))}},"f7N+":function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.hasOwnProperty.call(e,r)&&n(t,e,r);return a(t,e),t},s=this&&this.__generator||function(e,t){var r,n,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(r)throw new TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,n=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=s.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],n=0}finally{r=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fetchProfileSaga=void 0;var i=r("5rFJ"),l=u(r("vDqi")),c=o(r("VYM/")),d=r("4tJo"),f=r("VYM/");t.fetchProfileSaga=function(){var e,t,r;return s(this,(function(n){switch(n.label){case 0:return[4,i.take(d.userProfileActions.requestFetchUserProfile.type)];case 1:e=n.sent().payload,console.log(e),t=e.targetId,console.log(t),n.label=2;case 2:return n.trys.push([2,8,,10]),console.log(f.createGetUserProfileUrl(t)),[4,i.call(l.default.get,c.serverUrl+f.createGetUserProfileUrl(t))];case 3:return 200!=(r=n.sent()).status?[3,5]:[4,i.put(d.userProfileActions.fetchUserProfileSuccess({profile:r.data.profile}))];case 4:return n.sent(),[3,7];case 5:return[4,i.put(d.userProfileActions.fetchUserProfileFailure())];case 6:n.sent(),n.label=7;case 7:return[3,10];case 8:return n.sent(),[4,i.put(d.userProfileActions.fetchUserProfileFailure())];case 9:return n.sent(),[3,10];case 10:return[3,0];case 11:return[2]}}))}},fqsA:function(e,t,r){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.sessionActions=void 0;var a=r("i7Pf"),o=r("7Fo/"),s=r("Xep1"),u={authenticationStatus:o.AuthenticationStatuses.NOT_TRYING,userId:void 0,username:void 0,userCreationStatus:o.UserCreationStatuses.NOT_TRYING,bandsModified:[]},i=a.createSlice({name:"session",initialState:u,reducers:{requestAuthenticateUser:function(e,t){e.authenticationStatus=o.AuthenticationStatuses.AUTHENTICATING},authenticateUserSuccess:function(e,t){e.authenticationStatus=o.AuthenticationStatuses.AUTHENTICATED,e.userId=t.payload.userId,e.username=t.payload.username,e.bandsModified=t.payload.bandsModified},authenticateUserFailure:function(e,t){e.authenticationStatus=t.payload.reason,e.userId=void 0},requestLogout:function(){return u},requestCreateUser:function(e,t){e.userCreationStatus=o.UserCreationStatuses.PROCESSING},createUserSuccess:function(e){e.userCreationStatus=o.UserCreationStatuses.SUCCESS},createUserFailure:function(e,t){e.userCreationStatus=t.payload.reason}},extraReducers:(n={},n[s.bandActions.modifyBandScoreSuccess.type]=function(e,t){e.bandsModified.push({targetBandId:t.payload.targetBandId,value:t.payload.modificationValue})},n)});t.sessionActions=i.actions,t.default=i.reducer},g6pE:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Main=void 0;var a=n(r("q1tI")),o=r("/MKj"),s=r("55Ip"),u=r("YZbJ"),i=r("+WgK"),l=r("t+eW"),c=r("mUFl"),d=r("mlUh"),f=r("7hBq"),p=r("OEB8"),h=r("PVq7");t.Main=function(){return a.default.createElement(s.Router,{history:i.history},a.default.createElement(o.Provider,{store:u.store},a.default.createElement("div",null,a.default.createElement(f.Navigation,null),a.default.createElement(s.Route,{exact:!0,path:"/bands",component:l.BigBandTable}),a.default.createElement(s.Route,{exact:!0,path:"/login",component:d.Login}),a.default.createElement(s.Route,{exact:!0,path:"/new-user",component:p.NewUserForm}),a.default.createElement(s.Route,{exact:!0,path:"/",component:c.Landing}),a.default.createElement(s.Route,{path:"/users/:userId",component:function(e){var t=e.match;return a.default.createElement(h.UserProfile,{id:t.params.userId})}}))))}},mUFl:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Landing=void 0;var a=n(r("q1tI")),o=r("AEI1"),s=r("t+eW"),u=n(r("7vrA")),i=n(r("3Z9Z")),l=n(r("JI6e")),c=n(r("6xyR")),d=r("u/DC"),f=r("7Fo/");t.Landing=function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement(u.default,null,a.default.createElement(i.default,{className:"mb-5"},a.default.createElement(l.default,{md:8,className:"mb-3"},a.default.createElement(o.CreateBandForm,null),a.default.createElement(s.BigBandTable,null)),a.default.createElement(l.default,{md:4},a.default.createElement(c.default,{className:"mb-3"},a.default.createElement(c.default.Header,null,a.default.createElement("h5",null,"Most Names Contributed")),a.default.createElement(c.default.Body,null,a.default.createElement(d.UserRecordsList,{maxRecords:10,sortType:f.UserRecordSortTypes.MOST_NAMES_CONTRIBUTED}))),a.default.createElement(c.default,{className:"mb-3"},a.default.createElement(c.default.Header,null,a.default.createElement("h5",null,"Highest Average Score")),a.default.createElement(c.default.Body,null,a.default.createElement(d.UserRecordsList,{maxRecords:10,sortType:f.UserRecordSortTypes.HIGHEST_AVERAGE_SCORE}))),a.default.createElement(c.default,{className:"mb-3"},a.default.createElement(c.default.Header,null,a.default.createElement("h5",null,"Highest Score")),a.default.createElement(c.default.Body,null,a.default.createElement(d.UserRecordsList,{maxRecords:10,sortType:f.UserRecordSortTypes.HIGHEST_SCORE})))))))}},mlUh:function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Login=void 0;var s=o(r("q1tI")),u=o(r("cWnB")),i=o(r("TUci")),l=o(r("7vrA")),c=o(r("6xyR")),d=o(r("QojX")),f=r("/MKj"),p=r("7Fo/"),h=r("fqsA"),m=o(r("T/rR")),y=function(e){return{authenticationStatus:e.session.authenticationStatus}},_=function(e){return{authenticateUser:function(t,r){return e(h.sessionActions.requestAuthenticateUser({username:t,password:r}))}}},S=(f.connect(y,_),function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={username:"",password:""},t}return a(t,e),t.prototype.render=function(){var e=this,t=this.props,r=t.authenticationStatus,n=t.authenticateUser;return s.default.createElement(l.default,null,s.default.createElement(c.default,{style:{maxWidth:"36rem"},className:"mx-auto"},s.default.createElement(c.default.Body,null,s.default.createElement(d.default,null,s.default.createElement(d.default.Group,{controlId:"formBasicUsername"},s.default.createElement(d.default.Label,null,"Username"),s.default.createElement(d.default.Control,{type:"text",isInvalid:r==p.AuthenticationStatuses.USERNAME_NOT_FOUND,onChange:function(t){return e.setState({username:t.target.value})}}),s.default.createElement(d.default.Text,{className:"text-muted"},"New user? Create an account ",s.default.createElement("a",{href:"/new-user"},"here"),"."),s.default.createElement(d.default.Control.Feedback,{type:"invalid"},"Please enter a valid username.")),s.default.createElement(d.default.Group,{controlId:"formBasicPassword"},s.default.createElement(d.default.Label,null,"Password"),s.default.createElement(d.default.Control,{type:"password",isInvalid:r==p.AuthenticationStatuses.INVALID_PASSWORD,onChange:function(t){return e.setState({password:t.target.value})}}),s.default.createElement(d.default.Control.Feedback,{type:"invalid"},"Incorrect password.")),s.default.createElement(u.default,{variant:"primary",type:"button",disabled:r==p.AuthenticationStatuses.AUTHENTICATING||r==p.AuthenticationStatuses.AUTHENTICATED,onClick:function(){return n(e.state.username,e.state.password)}},"Submit"),r==p.AuthenticationStatuses.AUTHENTICATING&&s.default.createElement(i.default,{variant:"info"},s.default.createElement(m.default,{animation:"border",variant:"primary"})," Processing..."),r==p.AuthenticationStatuses.AUTHENTICATED&&s.default.createElement(i.default,{variant:"success"},"Successfully logged in!")))))},t}(s.default.Component));t.Login=f.connect(y,_)(S)},n7of:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createUserProfileUrl=void 0,t.createUserProfileUrl=function(e){return"/users/"+e}},qgVz:function(e,t,r){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=n(r("q1tI")),o=n(r("i8i4")),s=r("g6pE");r("q4sD"),o.default.render(a.default.createElement(s.Main,null),document.getElementById("app"))},"t+eW":function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var o=arguments[t],s=0,u=o.length;s<u;s++,a++)n[a]=o[s];return n},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BigBandTable=void 0;var u=s(r("q1tI")),i=s(r("cWnB")),l=s(r("pJDg")),c=s(r("65eO")),d=s(r("6xyR")),f=s(r("MBJH")),p=s(r("hlKo")),h=r("/MKj"),m=r("7Fo/"),y=r("Xep1"),_=r("vpfB"),S=r("1HUD"),v=r("n7of"),b=r("55Ip");function E(e){return{appIsFetchingBands:e.bands.pendingFetches>0,bands:o(e.bands.items),userIsAuthenticated:e.session.authenticationStatus==m.AuthenticationStatuses.AUTHENTICATED,userId:e.session.userId,usersModifications:e.session.bandsModified}}function g(e){return{addPointsTo:function(t,r,n,a){n&&e(y.bandActions.requestModifyBandScore({targetBandId:t,modifyingUserId:n,modificationValue:r,undoValue:a}))},requestFetchBands:function(t,r){e(y.bandActions.requestFetchBands({maxBands:t,sortBy:r}))}}}h.connect(E,g);var T=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={sortType:m.BandSortTypes.MOST_RECENT,bandsPerFetch:20,shouldFetchBands:!1,maxBandsDisplayed:20},t}return a(t,e),t.prototype.componentDidMount=function(){this.props.requestFetchBands(this.state.bandsPerFetch,this.state.sortType)},t.prototype.componentDidUpdate=function(e,t){console.log("this.state.maxBandsDisplayed: ",this.state.maxBandsDisplayed),console.log("prevState.maxBandsDisplayed: ",t.maxBandsDisplayed),(this.state.maxBandsDisplayed>t.maxBandsDisplayed||this.state.shouldFetchBands)&&(this.props.requestFetchBands(this.state.maxBandsDisplayed,this.state.sortType),this.setState({shouldFetchBands:!1})),this.state.sortType!==t.sortType&&this.setState({maxBandsDisplayed:this.state.bandsPerFetch,shouldFetchBands:!0})},t.prototype.setSortType=function(e){this.setState({sortType:e})},t.prototype.loadMore=function(){this.setState((function(e){return{maxBandsDisplayed:e.maxBandsDisplayed+e.bandsPerFetch}}))},t.prototype.getUserModificationToBand=function(e){var t=this.props.usersModifications.find((function(t){return t.targetBandId===e}));return t?t.value:0},t.prototype.render=function(){var e=this,t=_.sortAndLimitBands(this.props.bands,this.state.sortType,this.state.maxBandsDisplayed),r=[{value:m.BandSortTypes.BEST,name:"Best"},{value:m.BandSortTypes.WORST,name:"Worst"},{value:m.BandSortTypes.MOST_RECENT,name:"Most Recent"}],n=this.props.userIsAuthenticated;return u.default.createElement(d.default,null,u.default.createElement(d.default.Header,null,u.default.createElement(l.default,{toggle:!0},r.map((function(t,r){return u.default.createElement(p.default,{key:r,type:"radio",value:t.value,name:"sortRadio",checked:t.value===e.state.sortType,onChange:function(t){t.preventDefault();var r=t.currentTarget;console.log("currentTarget",r);var n=parseInt(r.value);console.log("sortTypeAsNumber",n),e.setSortType(n)}},t.name)})))),u.default.createElement(d.default.Body,null,u.default.createElement(f.default,{size:"sm",striped:!0,bordered:!0},u.default.createElement("tbody",null,t.map((function(t){return u.default.createElement("tr",{key:String(t._id)},u.default.createElement("td",null,u.default.createElement(S.BandModButtonGroup,{userIsAuthorized:n,modPerformed:e.getUserModificationToBand(t._id),modifyBand:function(r,n){return e.props.addPointsTo(t._id,r,e.props.userId,n)},currentScore:t.score})," ",u.default.createElement(c.default,{variant:"secondary"},t.score)," ",t.name," ",u.default.createElement("span",{className:"font-weight-lighter"},"from  ",u.default.createElement(b.Link,{to:v.createUserProfileUrl(String(t.ownerId))},t.ownerName))))})))),u.default.createElement(i.default,{variant:"secondary",block:!0,onClick:function(){return e.loadMore()}},"Show me more...")))},t}(u.default.Component);t.BigBandTable=h.connect(E,g)(T)},tIUU:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.userRecordsActions=void 0;var n=r("i7Pf").createSlice({name:"userRecords",initialState:{pendingFetches:0,items:[]},reducers:{requestFetchUserRecords:function(e,t){e.pendingFetches++},fetchUserRecordsSuccess:function(e,t){t.payload.forEach((function(t){e.items.some((function(e){return e.id==t.id}))||e.items.push(t)})),e.pendingFetches--},fetchUserRecordsFailure:function(e){e.pendingFetches--}}});t.userRecordsActions=n.actions,t.default=n.reducer},"u/DC":function(e,t,r){"use strict";var n,a=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),o=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var o=arguments[t],s=0,u=o.length;s<u;s++,a++)n[a]=o[s];return n},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UserRecordsList=void 0;var u=s(r("q1tI")),i=r("/MKj"),l=r("7Fo/"),c=r("tIUU"),d=r("6pyq"),f=s(r("MBJH")),p=s(r("65eO")),h=r("55Ip"),m=r("n7of");function y(e){return{appIsFetchingRecords:e.userRecords.pendingFetches>0,records:o(e.userRecords.items)}}function _(e){return{requestUserRecords:function(t,r){e(c.userRecordsActions.requestFetchUserRecords({numOfRecords:t,sortType:r}))}}}function S(e){switch(e.sortType){case l.UserRecordSortTypes.HIGHEST_AVERAGE_SCORE:return u.default.createElement(p.default,{variant:"secondary"},e.record.averageScore.toFixed(2));case l.UserRecordSortTypes.HIGHEST_SCORE:return u.default.createElement(p.default,{variant:"secondary"},e.record.totalScore);case l.UserRecordSortTypes.MOST_NAMES_CONTRIBUTED:return u.default.createElement(p.default,{variant:"secondary"},e.record.namesContributed);default:return u.default.createElement(p.default,{variant:"secondary"},"?")}}i.connect(y,_);var v=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.prototype.componentDidMount=function(){this.props.requestUserRecords(this.props.maxRecords,this.props.sortType)},t.prototype.render=function(){var e=this;if(this.props.appIsFetchingRecords)return u.default.createElement("div",null,"Loading user records...");var t=d.sortAndLimitUserRecords(this.props.records,this.props.sortType,this.props.maxRecords);return u.default.createElement(f.default,{size:"sm",striped:!0,bordered:!0},u.default.createElement("tbody",null,t.map((function(t,r){return u.default.createElement("tr",{key:String(t.id)},u.default.createElement("td",null,r+1),u.default.createElement("td",null,u.default.createElement(h.Link,{to:m.createUserProfileUrl(String(t.id))},t.name)," ",u.default.createElement(S,{sortType:e.props.sortType,record:t})))}))))},t}(u.default.Component);t.UserRecordsList=i.connect(y,_)(v)},uHhB:function(e,t,r){"use strict";r.r(t);var n=r("7Zh8");r.d(t,"bandCreationSaga",(function(){return n.bandCreationSaga}));var a=r("UpH7");r.d(t,"bandScoreModificationSaga",(function(){return a.bandScoreModificationSaga}));var o=r("O5yZ");r.d(t,"userAuthenticationSaga",(function(){return o.userAuthenticationSaga}));var s=r("bU5+");r.d(t,"userCreationSaga",(function(){return s.userCreationSaga}));var u=r("NL3p");r.d(t,"watchFetchBandsSaga",(function(){return u.watchFetchBandsSaga}));var i=r("U6Ra");r.d(t,"watchFetchUserRecordsSaga",(function(){return i.watchFetchUserRecordsSaga}));var l=r("f7N+");r.d(t,"fetchProfileSaga",(function(){return l.fetchProfileSaga}))},vpfB:function(e,t,r){"use strict";var n=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),a=0;for(t=0;t<r;t++)for(var o=arguments[t],s=0,u=o.length;s<u;s++,a++)n[a]=o[s];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.sortAndLimitBands=void 0;var a=r("7Fo/");t.sortAndLimitBands=function(e,t,r){var o=n(e);switch(t){case a.BandSortTypes.BEST:o.sort((function(e,t){return t.score-e.score}));break;case a.BandSortTypes.MOST_RECENT:o.sort((function(e,t){return Date.parse(t.createdOn)-Date.parse(e.createdOn)}));break;case a.BandSortTypes.WORST:o.sort((function(e,t){return e.score-t.score}))}return o=o.slice(0,r)}}},[["qgVz",1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,